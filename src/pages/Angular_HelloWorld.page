<apex:page standardStylesheets="false" sidebar="false" showHeader="false" controller="Angular_HelloWorld">
    <style>
        table, th , td  {
            border: 1px solid grey;
            border-collapse: collapse;
            padding: 5px;
        }
    </style>
    <html ng-app="myApp">
        <link rel="stylesheet" href = "https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" />
        <script src= "https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
        
        <body>
        <div ng-controller="personCtrl">
            Search table :<br/>
            <input type="text" ng-model="criteria" /> <br/><br/>
            <table class="table table-striped table-bordered table-hover table-condensed">
                <thead>
                    <tr>
                        <th>Actions</th>
                        <th>Id</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Phone</th>
                    </tr>
                </thead>
                <tr ng-repeat="x in contacts | filter:criteria">
                    <td>
                        <a ng-click="editRecord(x.id);">Edit</a> | 
                        <a ng-click="deleteRecord(x.id);">Delete</a>
                    </td>
                    <td>{{x.id}}</td>
                    <td>{{x.firstName}}</td>
                    <td>{{x.lastName}}</td>
                    <td>{{x.phone}}</td>
                </tr>
            </table>

                <form name="myForm">
                    First Name :<br/>
                    <input type="text" ng-model="firstName"/><br/>
                    Last Name :<br/>
                    <input type="text" ng-model="lastName" />
                    <br/>
                    Phone :<br/>
                    <input type="text" ng-model="phone" /><br/>
                    <br/>
                    <input type="hidden" ng-model="id" />
                    <button ng-click="addRow();" >Add</button>
                </form>
        </div>
        <script>
            angular.module('myApp', []).controller('personCtrl', function($scope, $http, $q) {
                $scope.fullName = function() {
                    return $scope.firstName + ' ' + $scope.lastName;
                };

                $scope.contacts = {!contactListJSON};
                console.log('$scope.contacts -->', $scope.contacts);

                $scope.reset = function() {
                    delete $scope.firstName;
                    delete $scope.lastName;
                    delete $scope.phone;
                    delete $scope.id;
                }

                $scope.addRow = function() {
                    var contactJS = new Contact();

                    contactJS.firstName = $scope.firstName;
                    contactJS.lastName = $scope.lastName;
                    contactJS.phone = $scope.phone;
                    contactJS.id = $scope.id;
                    console.log('contactJS before upsert-->', contactJS);

                    // This is required to create a result set for async call
                    var deferred = $q.defer();
                    // Create a promise to finalize after async exec is complete
                    var promise = deferred.promise;

                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.Angular_HelloWorld.upsertContact}',
                        contactJS,
                        function(result, event) {
                            console.log('result', result);

                            // Check if it is insert or update
                            if (!contactJS.id) {
                                $scope.contacts.push(JSON.parse(result));
                            } else {
                                for (var i=0; i<$scope.contacts.length;i++) {
                                    if ($scope.contacts[i].id === contactJS.id) {
                                        $scope.contacts[i] = contactJS;
                                    }
                                }
                            }
                            deferred.resolve(result);
                            console.log('-->', $scope.contacts);
                        },
                        {escape:false}
                    );
                    $scope.reset();
                    promise.then(function(value){
                        // This will automatically call the apply and digest to reflect 2 way binding
                    });
                }

                function Contact() {
                    this.id = null;
                    this.lastName = null;
                    this.phone = null;
                    this.id = null;
                }
                
                // Edit record to capture all existing data and prepopulate
                $scope.editRecord = function(contactId) {
                    console.log('--> edit record', $scope.contacts);
                    var contactInstance = _.find($scope.contacts, function(cInst){
                        return cInst.id === contactId;
                    });
                    console.log('contactInstance -->', contactInstance);
                    $scope.firstName = contactInstance.firstName;
                    $scope.lastName = contactInstance.lastName;
                    $scope.phone = contactInstance.phone;
                    $scope.id = contactInstance.id;
                }

                $scope.deleteRecord  = function(contactId) {
                    console.log('delete record -->', contactId);
                    console.log('delete record -->', $scope.contacts);
                    // This is required to create a result set for async call
                    var deferred = $q.defer();
                    // Create a promise to finalize after async exec is complete
                    var promise = deferred.promise;

                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.Angular_HelloWorld.deleteContact}',
                        contactId,
                        function(result, event) {
                            console.log('result', result);
                            if (event.status) {
                                alert('Contact Record deleted');
                                var indexElement =
                                    _.findIndex($scope.contacts, {id : contactId});
                                $scope.contacts.splice(indexElement, 1);
                                console.log('indexElement -->', indexElement);
                            } else if (event.type === 'exception') {
                                alert('Faced error : ' + event.message + '\n Error at : ' + event.where);
                            }
                            deferred.resolve(result);
                            console.log('-->', $scope.contacts);
                        },
                        {escape:false}
                    );
                    $scope.reset();
                    promise.then(function(value){
                        // This will automatically call the apply and digest to reflect 2 way binding
                    });
                }
            });

        </script>
        </body>
    </html>

</apex:page>